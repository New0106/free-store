<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">  
     
    <!-- 指定静态资源映射 
    	把目录 statics 作为静态资源目录
    	/statics/** 其资源使用 /statics/目录名 访问
    	*是通配符，表示所有文件 **包含了子目录下所有文件-->  
    <mvc:resources location="/statics/" mapping="/statics/**" /> 
    <!-- 日期时间，自定义转换器 -->
    <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
    	<property name="converters">
    		<list>
    			<bean class="com.tool.StringToDateConverter">
    				<constructor-arg type="java.lang.String" value="yyyy-MM-dd"/>
    			</bean>
    		</list>
    	</property>
    </bean>
        
    <!-- 使用注解方式查找Controller（HandleMapping），并且使用了自定义转换器 -->
	<mvc:annotation-driven conversion-service="conversionService">
		<mvc:message-converters>
			<!-- 并且配置了消息转换器（解决 JSON 编码乱码）  -->
    		<bean class="org.springframework.http.converter.StringHttpMessageConverter">
    			<property name="supportedMediaTypes">
    				<list>
    					<value>application/json;charset=UTF-8</value>
    				</list>
    			</property>
    		</bean>
    	</mvc:message-converters>
	</mvc:annotation-driven>
    
	<!-- 视图解析器 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" >
		<property name="prefix" value="/WEB-INF/jsp/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	<!-- 扫描Controller，生成Bean -->
	<context:component-scan base-package="com.controller"/>
	
	<!--  全局异常处理 -->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<!-- 发生了异常会跳转到 error 视图 -->
				<prop key="java.lang.Exception">error</prop>
			</props>
		</property>
	</bean>
	
	<!-- 配置拦截器 -->
	<mvc:interceptors>
		<!-- 其中一个拦截器 -->
		<mvc:interceptor>
			<!-- mapping指定拦截请求的 URL，可以使用通配符
				/*？表示拦截所有请求 -->
			<mvc:mapping path="/func1"/>
			<!-- 对应的拦截器对象 -->
			<bean class="com.interceptor.TestInterceptor"/>
		</mvc:interceptor>
		<mvc:interceptor>
			<!-- /user/*？表示拦截请求 /user/下面的所有请求 -->
			<mvc:mapping path="/func2"/>
			<bean class="com.interceptor.TestInterceptor2"/>
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!-- 装配MultipartResolver -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 上传单个文件大小上限，单位为字节(1M) -->
		<property name="maxUploadSize">
			<value>1048576</value>
		</property>
		<!-- 请求的编码格式，必须和JSP的pageEncoding属性一致，
			以便正确读取表单的内容，默认为ISO-8859-1 -->
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
	</bean>
	
	<!-- 国际化 -->
	<!-- 告诉 Spring MVC 国际化的属性文件保存到哪里 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<!-- 国际化资源文件名 i18n -->
		<property name="basename" value="i18n"/>
	</bean>
	<!-- AcceptHeaderLocaleResolver配置是默认语言区域解析器，不配置也可以 -->
	<!--  
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver"/>
	-->
	
	<mvc:interceptors>
		<!-- 国际化操作拦截器如果采用基于(Session/Cookie)则必须配置 -->
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"/>
	</mvc:interceptors>
	<!-- SessionLocaleResolver配置 -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver"/>
	
	
</beans>





























